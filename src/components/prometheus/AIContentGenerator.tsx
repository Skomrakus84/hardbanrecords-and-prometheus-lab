import React, { useState } from 'react';
import { FileText, Download, Copy, Sparkles } from 'lucide-react';

interface ContentTemplate {
  id: string;
  name: string;
  platform: string;
  type: 'post' | 'description' | 'bio';
  template: string;
}

const AIContentGenerator: React.FC = () => {
  const [selectedTemplate, setSelectedTemplate] = useState<string>('');
  const [generatedContent, setGeneratedContent] = useState<string>('');
  const [isGenerating, setIsGenerating] = useState(false);

  const templates: ContentTemplate[] = [
    {
      id: 'instagram-post',
      name: 'Instagram Post',
      platform: 'Instagram',
      type: 'post',
      template: 'Create an engaging Instagram post about our new music release...'
    },
    {
      id: 'twitter-thread',
      name: 'Twitter Thread',
      platform: 'Twitter',
      type: 'post',
      template: 'Craft a compelling Twitter thread introducing our latest track...'
    },
    {
      id: 'album-description',
      name: 'Album Description',
      platform: 'Spotify',
      type: 'description',
      template: 'Write an captivating album description that draws listeners in...'
    },
    {
      id: 'artist-bio',
      name: 'Artist Bio',
      platform: 'Website',
      type: 'bio',
      template: 'Create an artist biography that showcases our unique sound...'
    }
  ];

  const generateContent = async () => {
    if (!selectedTemplate) return;

    setIsGenerating(true);
    // Simulate AI content generation
    setTimeout(() => {
      const template = templates.find(t => t.id === selectedTemplate);
      const mockContent = `ðŸš€ **${template?.name} Generated Content**

âœ¨ Discover the revolutionary sound of Hardban Records Lab - where electronic music meets cutting-edge production!

ðŸŽµ Our latest release combines deep basslines with ethereal melodies, creating an immersive audio experience that will transport you to new dimensions.

ðŸ”¥ Don't miss out on this sonic journey. Stream now and feel the rhythm!

#HardbanRecords #ElectronicMusic #NewRelease #MusicProduction

[Generated by Prometheus AI - ${new Date().toLocaleDateString()}]`;

      setGeneratedContent(mockContent);
      setIsGenerating(false);
    }, 2000);
  };

  const copyToClipboard = () => {
    navigator.clipboard.writeText(generatedContent);
  };

  const exportContent = () => {
    const blob = new Blob([generatedContent], { type: 'text/plain' });
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = `ai-content-${Date.now()}.txt`;
    a.click();
    URL.revokeObjectURL(url);
  };

  return (
    <div className="p-6 max-w-4xl mx-auto">
      <div className="mb-8">
        <h2 className="text-2xl font-bold mb-2 flex items-center">
          <Sparkles className="w-6 h-6 mr-2 text-purple-500" />
          AI Content Generator
        </h2>
        <p className="text-gray-600">
          Generate engaging marketing content for your music releases using advanced AI technology.
        </p>
      </div>

      <div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
        {/* Template Selection */}
        <div className="space-y-6">
          <div>
            <h3 className="text-lg font-semibold mb-4">Choose Content Template</h3>
            <div className="space-y-3">
              {templates.map((template) => (
                <div
                  key={template.id}
                  onClick={() => setSelectedTemplate(template.id)}
                  className={`p-4 border rounded-lg cursor-pointer transition-all ${
                    selectedTemplate === template.id
                      ? 'border-purple-500 bg-purple-50'
                      : 'border-gray-200 hover:border-gray-300'
                  }`}
                >
                  <div className="flex items-center justify-between">
                    <div>
                      <h4 className="font-medium">{template.name}</h4>
                      <p className="text-sm text-gray-600">{template.platform}</p>
                    </div>
                    <FileText className="w-5 h-5 text-gray-400" />
                  </div>
                  <p className="text-sm text-gray-500 mt-2">{template.template}</p>
                </div>
              ))}
            </div>
          </div>

          <button
            onClick={generateContent}
            disabled={!selectedTemplate || isGenerating}
            className="w-full bg-purple-600 text-white py-3 px-6 rounded-lg font-medium hover:bg-purple-700 disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center"
          >
            {isGenerating ? (
              <>
                <div className="animate-spin rounded-full h-5 w-5 border-b-2 border-white mr-2"></div>
                Generating...
              </>
            ) : (
              <>
                <Sparkles className="w-5 h-5 mr-2" />
                Generate Content
              </>
            )}
          </button>
        </div>

        {/* Generated Content */}
        <div className="space-y-6">
          <div>
            <h3 className="text-lg font-semibold mb-4">Generated Content</h3>
            <div className="bg-gray-50 border rounded-lg p-4 min-h-[300px]">
              {generatedContent ? (
                <pre className="whitespace-pre-wrap text-sm">{generatedContent}</pre>
              ) : (
                <div className="text-gray-500 text-center py-12">
                  <FileText className="w-12 h-12 mx-auto mb-4 opacity-50" />
                  <p>Select a template and click "Generate Content" to see AI-generated content here.</p>
                </div>
              )}
            </div>
          </div>

          {generatedContent && (
            <div className="flex space-x-3">
              <button
                onClick={copyToClipboard}
                className="flex-1 bg-blue-600 text-white py-2 px-4 rounded-lg font-medium hover:bg-blue-700 flex items-center justify-center"
              >
                <Copy className="w-4 h-4 mr-2" />
                Copy
              </button>
              <button
                onClick={exportContent}
                className="flex-1 bg-green-600 text-white py-2 px-4 rounded-lg font-medium hover:bg-green-700 flex items-center justify-center"
              >
                <Download className="w-4 h-4 mr-2" />
                Export
              </button>
            </div>
          )}
        </div>
      </div>
    </div>
  );
};

export default AIContentGenerator;
